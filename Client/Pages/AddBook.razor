@page "/book/add"
@page "/book/edit/{bookId:int}"
@using BlazorWebCRUD.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h1>@Title Book</h1>
<hr />
<EditForm Model="@book" OnValidSubmit="SaveBook">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Title" class="form-label">Title</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Title" />
        </div>
        <ValidationMessage For="@(() => book.Title)" />
    </div>
    <div class="mb-3">
        <label for="Author" class="form-label">Author</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Author" />
        </div>
        <ValidationMessage For="@(() => book.Title)" />
    </div>
    <div class="mb-3">
        <label for="PublishedYear" class="form-label">Published Year</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="book.PublishedYear" />
        </div>
        <ValidationMessage For="@(() => book.PublishedYear)" />
    </div>
    <div class="mb-3">
        <label for="Description" class="form-label">Description</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="book.Description" />
        </div>
        <ValidationMessage For="@(() => book.Description)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {
    [Parameter]
    public int bookId { get; set; }
    protected string Title = "Add";
    protected Book book = new();
    protected override async Task OnParametersSetAsync()
    {
        if (bookId != 0)
        {
            Title = "Edit";
            book = await Http.GetFromJsonAsync<Book>("api/book/" + bookId);
        }
    }
    protected async Task SaveBook()
    {
        if (book.Id != 0)
        {
            await Http.PutAsJsonAsync("api/book", book);
        }
        else
        {
            await Http.PostAsJsonAsync("api/book", book);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/fetchbookdetails");
    }
}